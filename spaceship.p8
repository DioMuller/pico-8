pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
-------------------
-- sfx
-------------------
--  0 = shooting
--  1 = destroy enemy
--  2 = start game
-- 15 = hit
-------------------
-- music
-------------------
-- 0 = title
-- 5 = level
-- 8 = game over
-- 9 = victory

-------------------
-- game state
-------------------
--  0 = title
--  1 = game
--  2 = game over
--  3 = victory
-- -1 = error

-------------------
-- data
-------------------
-- game state
local game_state = 0

-- player
local player = {
	x = 0,
	y = 0,
	speed = 0
}

-- aux
local shooting = false
local blinking = false
local blink_count = 0

-- bullets
local bullets = {}
local enemy_bullets = {}
local bullet_speed = 4

-- enemies
local enemies = {}

local waves =
{
	{enemy_type=1,count=11,creation_pos=function(count) return count*10, (6-count)*(6-count) - 30 end},
	{enemy_type=2,count=11,creation_pos=function(count) return count*10, -(6-count)*(6-count) - 30 end},
	{enemy_type=3,count=11,creation_pos=function(count) return count*10, -30 end}
}

local enemy_types =
{
	{id=1,sprite=16,speed=2,behavior=1,score=100,min_delay=32,delay_range=64},
	{id=2,sprite=17,speed=2,behavior=2,score=200,min_delay=32,delay_range=32},
	{id=3,sprite=18,speed=2,behavior=3,score=300,min_delay=32,delay_range=16}
}

local enemy_behaviors =
{
	[1]=function(enemy) -- do nothing
	
	end,	
	[2]=function(enemy) -- shooter
		if enemy.delay < 0 then
			create_enemy_bullet(enemy)
			local enemy_data = enemy_types[enemy.type]
			enemy.delay=rnd(enemy_data.delay_range)+enemy_data.min_delay
		else
			enemy.delay -= 1
		end
	end,
	[3]=function(enemy) -- todo
	end
}

-- game state
local score = 0
local high = 5000
local lives = 3
local kills = 0
local wave = 0

-- background
local stars = {}
local star_count = 64
local star_speed = 3

-------------------
-- game lifetime
-------------------
function _init()
	change_state(0)
end

function _update()
	if game_state == 0 then -- title
		update_title()
		update_blink()
		update_background()
	elseif game_state == 1 then -- game
		update_player()
		update_enemies()
		update_bullets()
		update_background()
		
		if #enemies == 0 then
			next_wave() -- victory
		end
	elseif game_state == 2 then -- game over
		update_background()
		update_blink()
		update_game_end()
	elseif game_state == 3 then -- victory
		update_background()
		update_blink()
		update_game_end()
	end
end

function _draw()
	cls()

	if game_state == 0 then -- title
		draw_background()
		draw_title()
	elseif game_state == 1 then -- game
		draw_background()
		draw_bullets()
		draw_enemies()
		draw_player()
		
		draw_ui()
	elseif game_state == 2 then -- game over
		draw_background()
		draw_gameover()
	elseif game_state == 3 then -- victory
		draw_background()
		draw_victory()
	else -- error
		print('error: invalid game state!', 10, 10, 8)
	end
end

-------------------
-- init methods
-------------------
function init_title()
	-- bgm
	music(0)
	-- init background
	stars = {}
	for i=1,star_count do
		add(stars, {x=rnd(128),y=rnd(128)})
	end
end

function init_game()
	-- init player
	player.x = 64
	player.y = 118
	player.speed = 2
	
	-- game state
	kills = 0
	score = 0
	wave = 0
	lives = 3
	
	-- bgm
	music(5)
		
	-- init enemies
	next_wave()
end

function init_gameover()
	music(8)
end

function init_victory()
	music(9)
end

-------------------
-- update methods
-------------------
function update_player()
	if btn(0) and player.x > 2 then
		player.x -= player.speed
	end
	
	if btn(1) and player.x < 118 then
		player.x += player.speed
	end
	
	if btn(2) and player.y > 18 then
		player.y -= player.speed
	end
	
	if btn(3) and player.y < 118 then
		player.y += player.speed
	end		
	
	if btn(4) then
		if not shooting then
			sfx(0)
			create_bullet()
			shooting = true
		end
	else
		shooting = false
	end
end

function update_enemies()
	for enemy in all(enemies) do
	
		-- out of screen
		if enemy.y > 128 then
			del(enemies, enemy)
		end
		
		-- update bullet collision
		for bullet in all(bullets) do
			if intersect(enemy.x,enemy.y,8,8,bullet.x,bullet.y,8,8) then
				add_score(enemy.score)
				kills += 1
				del(enemies,enemy)
				del(bullets,bullet)
				sfx(1)
			end
		end
		
		if intersect(enemy.x, enemy.y, 8, 8, player.x, player.y, 8, 8) then
			hit_player()
			sfx(15)
		end

		-- move enemy
		enemy.y += enemy.speed
		-- enemy specific behavior
		enemy_behaviors[enemy.behavior](enemy)
	end
end

function update_background()
	for star in all(stars) do
		star.y += star_speed
		
		if star.y > 128 then
			star.y = 0
			star.x = rnd(128)
		end
	end
end

function update_bullets()	
	for bullet in all(bullets) do
		bullet.y -= bullet_speed
		
		if bullet.y < 0 then
			del(bullets, bullet)
		end
	end
	
	for bullet in all(enemy_bullets) do
		bullet.y += bullet_speed
		
		if intersect(player.x,player.y,8,8,bullet.x,bullet.y,8,8) then
			sfx(15)
			hit_player()
		elseif bullet.y > 128 then
			del(enemy_bullets, bullet)
		end
	end
end

function update_title()
	if btn(4) and btn(5) then
		if not shooting then
			sfx(2)
			change_state(1)
		end
	else
		shooting = false
	end
end

function update_game_end()
	if btn(4) and btn(5) then
		if not shooting then
			sfx(2)
			change_state(0)
		end
	else
		shooting = false
	end
end

function update_blink()
	blink_count += 1
	
	if blink_count > 10 then
		blinking = not blinking
		blink_count = 0
	end
end
-------------------
-- draw methods
-------------------
function draw_player()
	spr(1, player.x, player.y)
end

function draw_enemies()
	for enemy in all(enemies) do
		spr(enemy.sprite,enemy.x,enemy.y)
	end
end

function draw_background()
	for star in all(stars) do
		pset(star.x, star.y,13)
	end
end

function draw_bullets()
	for bullet in all(bullets) do
		spr(2, bullet.x, bullet.y)
	end
	
	for bullet in all(enemy_bullets) do
		spr(3, bullet.x, bullet.y)
	end
end

function draw_ui()
	-- top ui
	rectfill(0,0,127,15,1)
	print('score: '..score, 3, 3, 6)
	print('high : '..high, 3, 10, 6)
	
	print('lives: '..lives, 86, 3, 6)
	print('kills: '..kills, 86,10, 6)
	
	-- border
	rect(0,16,127,127,1)
end

function draw_title()
	map(0,0)
	if not blinking then 
		print('press ‚ùé + üÖæÔ∏è to start',20,80,8)
	end

	print('2019 diogo muller',28,120,6)
end

function draw_gameover()
	map(16,0)
	
	print('score:', 32, 64, 15)
	print(score, 	72, 64, 7)
	print('high :', 32, 74, 15)
	print(high, 	72, 74, 7)
	print('kills:', 32, 84, 15)
	print(kills, 	72, 84, 7)
	
	if not blinking then 
		print('press ‚ùé + üÖæÔ∏è to restart',16,108,8)
	end
end

function draw_victory()
	map(32,0)
	
	print('score:', 32, 64, 15)
	print(score, 	72, 64, 7)
	print('high :', 32, 74, 15)
	print(high, 	72, 74, 7)
	print('kills:', 32, 84, 15)
	print(kills, 	72, 84, 7)
	
	if not blinking then 
		print('press ‚ùé + üÖæÔ∏è to restart',16,108,8)
	end
end

-------------------
-- builder methods
-------------------
function create_bullet()
	add(bullets, {x = player.x, y = player.y})
end

function create_enemy_bullet(enemy)
	add(enemy_bullets, {x = enemy.x, y = enemy.y})
end

function create_enemy(x,y,id)
	local enemy = enemy_types[id]
	add(enemies,{x=x,y=y,type=id,speed=enemy.speed,behavior=enemy.behavior,sprite=enemy.sprite,score=enemy.score,delay=rnd(enemy.delay_range)+enemy.min_delay})
end

-------------------
-- helper methods
-------------------
function intersect(x1,y1,w1,h1,x2,y2,w2,h2)
	return x1<x2+w2 and x2<x1+w1 and y1<y2+h2 and y2<y1+h1
end

-------------------
-- state methods
-------------------
function change_state(new_state)
	game_state = new_state

	if game_state == 0 then
		init_title()
	elseif game_state == 1 then
		init_game()
	elseif game_state == 2 then
		init_gameover()
	elseif game_state == 3 then
		init_victory()
	else
		game_state = -1
	end
end

function add_score(value)
	score += value
	if (score > high) high = score
end

function hit_player()
	lives-=1
	
	if (lives < 0) then
		change_state(2)
	else
		reset_game()
	end	
end

function reset_game()
	player.x = 64
	player.y = 118
	
	wave -=1
	
	music(5)
	next_wave()
end

function next_wave()
	enemies = {}
	enemy_bullets = {}
	bullets = {}
	
	wave+=1
	
	if wave > #waves then
		change_state(3)
	else
		local current_wave = waves[wave]
		
		for i=1,current_wave.count do
			local x,y = current_wave.creation_pos(i)
			create_enemy(x,y,current_wave.enemy_type)
		end
	end
end
__gfx__
00000000000990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700007777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000900770090009900000088000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000707777070009900000088000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700777cc7770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000777cc7770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000079779700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0e0ee0e0055555504440044400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
eeecceee005005004444444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
eeecceee50555505444cc44400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e0eeee0e555cc555044cc44000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
800ee008505cc5054444444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000ee00050555505404cc40400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000ee00080055008804cc40800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00088000000880000004400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22222222222222222222222222222222222222222222222222222222222222220000000000000000000000000000000000000000000000000000777777770000
22222222222222222222222222222222222222222222222222222222222222220088888000088000008000800008888000000000000000000007666666667000
22222222222222222222222222222222222222222222222222222222222222220080000000800800080808080008000000000000000000000076555555556700
22222222222222222222222222222222222222222222222222222222222222220080000000800800080080080008000000000000000000000765000000005670
22222222222222222222222222222227222222222222222222222222222222220080000000888800080000080008888000000000000000007650000000000567
22222777777777777222222222222227222222222222222222222222222222220080088000800800080000080008000000000000000000007650000000000567
22222222222222222222222222222227222222222272222222222222222222220080008000800800080000080008000000000000000000007650000000000567
22222222222722222222222222222227772222222272222222222222222222220088888000800800080000080008888000000000000000007650000000000567
22222222222722222222222222277777277222222722222222222222222222220000000000000000000000000000000000000000000000007650000000000567
22222222222722222222227222222272222222222722222222222222222222220000000000000000000000000000000000000000000000007650000000000567
22222222222722222222222222222272222222222722222222222222222222220000088880008000800888000888000000000000000000007650000000000567
22222222222722222222222222222272222222222722222222222222222222220000080080008000800800000800800000000000000000007650000000000567
22222222222722222222272222222272222222222722222222222277777222220000080080008000800888000888000000000000000000000765000000005670
22222222222722222222272222222272222222222722222222222772227222220000080080000808000800000808000000000000000000000076555555556700
22222222222722222222272222222272222222222722222222227722227222220000088880000080000888000800800000000000000000000007666666667000
22222222222722222222272222222272222222222722222222227222277222220000000000000000000000000000000000000000000000000000777777770000
22222222222722222222272222222272222222222722222222227222272222220099999999999999999999999999990000000000000000007650000077777777
222222222227222222222722222222722222222227222222222272777222222209999999a999a9aaaa9a999a9999999000000000000000007650000066666666
222222222227222222222722222222722222222227222222222272222222222299999999a999a9a99a9a999a9999999900000000000000007650000055555555
222222222227222222222722222222722222222227222222222272222222222299999999aa9aa9a99a9a999a9999999900000000000000007650000000000000
2222222222272222222227222222227222222222272222222222722222222222999999999aaa99a99a9a999a9999999900000000000000007650000000000000
22222222222722222222222222222272222222222722227222227222277222229999999999a999a99a9a999a9999999900000000000000007650000000000000
22222222222222222222222222222222222222222777777222227777772222229999999999a999aaaa9aaaaa9999999900000000000000007650000000000000
22222222222222222222222222222222222222222222222222222222222222229999999999999999999999999999999900000000000000007650000000000000
22222222222222222222222222222222222222222222222222222222222222229999999999999999999999999999999900000000000000000000056700000000
222222222222222222222222222222222222222222222222222222222222222299999999a999a9aaa9a999a99999999900000000000000000000056700000000
222222222222222222222222222222222222222222222222222222222222222299999999a999a99a99aa99a99999999900000000000000000000056700000000
222222222222222222222222222222222222222222222222222222222222222299999999a999a99a99a9a9a99999999900000000000000000000056700000000
222222222222222222222222222222222222222222222222222222222222222299999999a9a9a99a99a99aa99999999900000000000000000000056700000000
222222222222222222222222222222222222222222222222222222222222222299999999aa9aa99a99a999a99999999900000000000000000000056755555555
222222222222222222222222222222222222222222222222222222222222222209999999a999a9aaa9a999a99999999000000000000000000000056766666666
22222222222222222222222222222222222222222222222222222222222222220099999999999999999999999999990000000000000000000000056777777777
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000068696a6b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000048494a4b00000000000000000000000078797a7b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000040414243444546470000000000000000000058595a5b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000050515253545556570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000060616263646566670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000007071727374757677000000000000004e6f6f6f6f6f6f6f6f4f0000000000004e6f6f6f6f6f6f6f6f4f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000006e00000000000000007e0000000000006e00000000000000007e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000006e00000000000000007e0000000000006e00000000000000007e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000006e00000000000000007e0000000000006e00000000000000007e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000005e7f7f7f7f7f7f7f7f5f0000000000005e7f7f7f7f7f7f7f7f5f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000c35010350143501b3502a350203501635014350113500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0001000021450284502f4502c450274501e4501b450274502c4502845017450164501845020450314502e4502045018450194501d4503645033450144501445015450174502f4502a45013450124501345026450
000100001875018750197501a7501b7501c7501e7501f7502175023750277502d75034750377502f7502875023750207501e7501b750187501775015750147501275011750107500f7500f7500f7500f75010750
011000000c5500e55010550115500c5500e55010550115500e5501055011550135500e5501055011550135500c5500c5500e5500e550105501055011550115500c5500c5500e5500e55010550105501155011550
011000000c5230e52310523115231352315523175230c5230c5230e52310523115231352315523175230c5230c5230e52310523115231352315523175230c5230c5230e52310523115231352315523175230c523
011000000e5501055011550135500e55010550115501355010550115501355015550105501155013550155500e5500e5501055010550115501155013550135500e5500e550105501055011550115501355013550
011000000c5520e55210552115520c5520e55210552105520e5521055211552135520e5521055211552115520c5520c5520e5520e552105521055211552115520e5520e552105521055211552115521355213552
011000000c5520e55210552115520c5520e55210552105520e5521055211552135520e55210552115521155210552115521355215552105521155213552155521155213552155521755211552135521555217552
011000001555215552175521755215552155521755217552175521755215552155521755217552155521555217552155521355211552105520e5520c5520c55217552155521355211552105520e5520c5520c552
011000000c0500c0500e0500c0500c0500e0500c0500e0501005011050130500c0500c0500e0500c0500c0500e0500c0500e0501005011050130500c0500c0500e0500c0500c0500e0500c0500e0501005011050
0110000011033110331303313033110331103313033130330c0330c03310033100330c0330c03310033100330e0330e03311033110330e0330e03311033110331303313033170331703313033130331703317033
011000000e0500e050100500e0500e050100500e05010050110501305015050170500e0500e050100500e0500e050100500e050100501105013050150500e0500e050100500e0500e050100500e0501005011050
0110000010050100501105010050100501105010050110501305015050170500e0500e050100500e0500e050100500e050100501105013050150500e0500e050100500e0500e050100500e050100501105013050
012000000505005050040500405005050050500205002050040500405002050020500405004050050500505002050020500205002050000000000000000000000000000000000000000000000000000000000000
01100000180501d0501d050180501f0501f0501a05023050230502405026050280502805028050290502905029050290500000000000000000000000000000000000000000000000000000000000000000000000
000100000e2500f2500f2500f2501025012250162501c250212501e250172501525015250172501b25021250152501125011250112501325015250172500f2500e2500e2500e2500e250132501c250132500e250
__music__
01 03044744
00 05044744
00 06044744
00 07044744
02 08044744
01 090a4344
00 0b0a4344
02 0c0a4344
04 0d424344
04 0e424344

